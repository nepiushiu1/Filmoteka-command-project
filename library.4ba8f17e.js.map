{"mappings":"oeACAA,EAAA,S,WCDA,IAAAC,EAAAD,EAAA,S,0GAiBAE,EAAAC,KAAKC,sBAAsBC,iBAAiB,SAO5C,SAAsBC,GACpB,GACwB,QAAtBA,EAAEC,OAAOC,UACa,QAAtBF,EAAEC,OAAOC,UACa,MAAtBF,EAAEC,OAAOC,UACa,OAAtBF,EAAEC,OAAOC,UACa,MAAtBF,EAAEC,OAAOC,SAET,OAGFC,SAASC,KAAKC,UAAUC,IAAI,cAC5BC,OAAOR,iBAAiB,UAAWS,GAEnC,MAAMC,EAAYT,EAAEC,OAAOS,QAAQC,GAE7BC,EAA6BC,aAAaC,QAAQ,eAClDC,EAA6BF,aAAaC,QAAQ,eAElDE,EAA2BC,KAAKC,MAAMN,GACtCO,EAA2BF,KAAKC,MAAMH,GAG5C,IAAIK,EAAsBJ,EAAyBK,MACjDC,GAAOA,EAAIX,IAAMF,IAEfc,EAAoBJ,EAAyBE,MAC/CC,GAAOA,EAAIX,IAAMF,IAGnB,MAAMe,EA4DR,SAA+BF,GAC7B,IAAIG,EAAY,GAGXA,EAFJH,EAAII,YAEY,GAAGC,EAAAC,mBAAmBN,EAAII,cAD1B,oFA2DjB,MAzDe,6GACkCD,gCACxBH,EAAIO,OAASP,EAAIQ,oHAEDR,EAAIO,OAASP,EAAIQ,4YAMwC,EAAAC,EAAAC,gBAClEV,EAAIW,kLAGmC,EAAAF,EAAAC,gBACvCV,EAAIY,4SAORZ,EAAIa,2QAMJb,EAAIc,gBAAkBd,EAAIe,qRAM1B,EAAA1C,EAAA2C,2BAA0BhB,EAAIiB,YAC9B,mQAORjB,EAAIkB,UAAY,iLAKhBlB,EAAIX,+JAIJW,EAAIX,kJ,CApHT8B,CACbrB,GAAuBG,IAEzB,EAAAmB,EAAAC,gBAAe,6CACf,EAAAC,EAAAC,uBAAsBrB,GAGF,MAAdsB,EAAa3C,SAAS4C,cAAc,gBAC1CD,EAAW/C,iBAAiB,SAAS,KACnC,IAAIiD,EAAoB,GACxB,MAAMC,EAAIpC,aAAaC,QAAQ,WAC3BmC,IACFD,EAAoB/B,KAAKC,MAAM+B,IAIbD,EAAkB3B,MAAK6B,GAAOA,EAAIvC,IAAMF,KAExD,EAAA0C,EAAAC,eAAchC,IACd,EAAA+B,EAAAE,wBAAuB9B,EAAmBuB,EAAYQ,IAC1D,EAAAC,EAAAC,cAAa/C,EAAU,IAGzB,MAAMgD,EAAWtD,SAAS4C,cAAc,cACxCU,EAAS1D,iBAAiB,SAAS,KACjC,IAAI2D,EAAkB,GACtB,MAAMC,EAAI9C,aAAaC,QAAQ,SAC3B6C,IACFD,EAAkBzC,KAAKC,MAAMyC,IAIXD,EAAgBrC,MAAK6B,GAAOA,EAAIvC,IAAMF,KAEtD,EAAA0C,EAAAS,aAAYrC,IACZ,EAAA4B,EAAAU,sBAAqBzC,EAAqBqC,EAAUH,IACxD,EAAAC,EAAAC,cAAa/C,EAAU,KAGzB,EAAA8C,EAAAC,cAAa/C,E,IA3Efb,EAAAC,KAAKiE,cAAc/D,iBAAiB,QAASgE,GAC7CnE,EAAAC,KAAKmE,kBAAkBjE,iBAAiB,SAyFxC,SAAkCC,GAC5BA,EAAEiE,gBAAkBjE,EAAEC,QACxB8D,G,IAxF0D,MAAxDT,EAAQ1D,EAAAC,KAAKqE,mBA0EnB,SAASH,IACPxD,OAAO4D,oBAAoB,UAAW3D,GACtCL,SAASC,KAAKC,UAAU+D,OAAO,cAC/BxE,EAAAC,KAAKwE,mBAAmBC,UAAY,E,CAGtC,SAAS9D,EAAgBR,GACR,WAAXA,EAAEuE,MACJR,G","sources":["src/library.js","src/js/api/loadModalCardLibrary.js"],"sourcesContent":["// CHANGE COLOR OF HEADER-BUTTONS\nimport './js/library-header-btns';\n\n// PAGINATION FOR A LIBRARY PAGE\nimport './js/pagination-library';\n\n//Усуває поимлку в консолі з модальним вікном\n// Якщо розкоментувати - буде помилка\n// CHANGE TEXT OF MODAL-BTNS\n// import './js/modal-btns';\n\n// OPEN MODAL CARD\nimport './js/api/loadModalCardLibrary';\n\n// MODAL IN FOOTER\nimport './js/modal-students';\n\n// scroll-up-btn\nimport './js/scroll-up-btn';\n\n// translate\nimport './js/translation';\n\n// change BG color\nimport './js/bg-color';\n\n","import { gettingGenresListForModal } from './gettingGenresList';\nimport { translateItems } from '../translation';\nimport makingMarkup from '../api/render-card-markup';\n// import MoviesApiService from './moviesApiServiceClass';\nimport { refs } from '../refs';\nimport { insertModalMarkupHome } from './insertingIntoDifferentContainers';\nimport {\n  addWatchedLocalStorage,\n  addQueueLocalStorage,\n  deleteQueue,\n  deleteWatched,\n} from '../local_storage';\nimport { textModalBtn } from '../modal-btns';\nimport { BASE_POSTER_URL } from '../api/constants/baseUrls';\nimport { setReleaseVote } from '../api/setReleaseDate';\n// const moviesApiService = new MoviesApiService();\n\nrefs.libraryCardsContainer.addEventListener('click', clickOnMovie);\nrefs.closeModalBtn.addEventListener('click', onCloseModalBtnClick);\nrefs.modalCardBackdrop.addEventListener('click', onModalCardBackdropClick);\n\n// Додано змінну для умови видалення фільму: головна сторінка чи бібліотека\nconst style = refs.homeCardsContainer;\n\nfunction clickOnMovie(e) {\n  if (\n    e.target.nodeName !== 'IMG' &&\n    e.target.nodeName !== 'DIV' &&\n    e.target.nodeName !== 'B' &&\n    e.target.nodeName !== 'H2' &&\n    e.target.nodeName !== 'P'\n  ) {\n    return;\n  }\n\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', modalCloseByEsc);\n\n  const currentId = e.target.dataset.id;\n\n  const unParsedCurrentArrayFilmsW = localStorage.getItem('currentFilm');\n  const unParsedCurrentArrayFilmsQ = localStorage.getItem('currentFilm');\n\n  const parsedCurrentArrayFilmsW = JSON.parse(unParsedCurrentArrayFilmsW);\n  const parsedCurrentArrayFilmsQ = JSON.parse(unParsedCurrentArrayFilmsQ);\n\n  // console.log(parsedCurrentArrayFilms.find(obj => obj.id == currentId));\n  let libraryMovieWatched = parsedCurrentArrayFilmsW.find(\n    obj => obj.id == currentId\n  );\n  let libraryMovieQueue = parsedCurrentArrayFilmsQ.find(\n    obj => obj.id == currentId\n  );\n\n  const render = makingModalCardMarkup(\n    libraryMovieWatched || libraryMovieQueue\n  );\n  translateItems('.movie__container--rigth-side [data-key]');\n  insertModalMarkupHome(render);\n  ///////////////////////////////////////////////////////////////////////////\n  //** Код для запису об'єктів в LOCAL STORAGE */\n  const watchedBtn = document.querySelector('#watched-btn');\n  watchedBtn.addEventListener('click', () => {\n    let arrayFilmsWatched = [];\n    const w = localStorage.getItem('watched');\n    if (w) {\n      arrayFilmsWatched = JSON.parse(w);\n    }\n\n    // Перевірка на наявність об'єкта в масиві фільмів \"WATCHED\"\n    const isAddedFilm = arrayFilmsWatched.find(arr => arr.id == currentId);\n    isAddedFilm\n      ? deleteWatched(libraryMovieWatched)\n      : addWatchedLocalStorage(libraryMovieQueue, watchedBtn, style);\n    textModalBtn(currentId);\n  });\n\n  const queueBtn = document.querySelector('#queue-btn');\n  queueBtn.addEventListener('click', () => {\n    let arrayFilmsQueue = [];\n    const q = localStorage.getItem('queue');\n    if (q) {\n      arrayFilmsQueue = JSON.parse(q);\n    }\n\n    // Перевірка на наявність об'єкта в масиві фільмів \"QUEUE\"\n    const isAddedFilm = arrayFilmsQueue.find(arr => arr.id == currentId);\n    isAddedFilm\n      ? deleteQueue(libraryMovieQueue)\n      : addQueueLocalStorage(libraryMovieWatched, queueBtn, style);\n    textModalBtn(currentId);\n  });\n  /////////////////////////////////////////////////////////////////////////////\n  textModalBtn(currentId);\n}\n\nfunction onCloseModalBtnClick() {\n  window.removeEventListener('keydown', modalCloseByEsc);\n  document.body.classList.remove('show-modal');\n  refs.modalCardContainer.innerHTML = '';\n}\n\nfunction modalCloseByEsc(e) {\n  if (e.code === 'Escape') {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction onModalCardBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction makingModalCardMarkup(obj) {\n  let imagePath = ``;\n  !obj.poster_path\n    ? (imagePath = `https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png`)\n    : (imagePath = `${BASE_POSTER_URL}/${obj.poster_path}`);\n  const markup = `<div class=\"movie__container--left-side\">              \n                  <img class=\"movie__image\" src=\"${imagePath}\"\n                    alt=\"${obj.title || obj.name}\" /></div>\n            <div class=\"movie__container--rigth-side\">\n                <h2 class=\"movie__title\">${obj.title || obj.name}</h2>\n                <table class=\"movie__info\">\n                    <tbody>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\" data-key=\"votes\">Vote / Votes</td>\n                            <td class=\"movie__info-rating\">\n                                <span class=\"movie__info-rating-value movie__info-rating--accent\">${setReleaseVote(\n                                  obj.vote_average\n                                )}</span>\n                                <span class=\"movie__info-rating-slash\">/</span>\n                                <span class=\"movie__info-rating-value\">${setReleaseVote(\n                                  obj.vote_count\n                                )}</span>\n                            </td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\" data-key=\"popularity\">Popularity</td>\n                            <td class=\"movie__info-numbers\">${\n                              obj.popularity\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\" data-key=\"originalTitle\">Original Title</td>\n                            <td class=\"movie__info-value\">${\n                              obj.original_title || obj.original_name\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows movie__info-rows--last\">\n                            <td class=\"movie__info-name\" data-key=\"genre\">Genre</td>\n                            <td class=\"movie__info-value\">${\n                              gettingGenresListForModal(obj.genre_ids) ||\n                              'Genre not defined'\n                            }</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h2 class=\"movie__about-title\" data-key=\"about\">About</h2>\n                <p class=\"movie__about-text\">\n                    ${obj.overview || 'No text'}\n                </p>\n                <div class=\"movie__btn-container\">\n                   \n                    <button type=\"submit\" id=\"watched-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn--accent\">ADD TO WATCHED\n                        </button>\n                    <button type=\"submit\" id=\"queue-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn-queue\">ADD TO QUEUE\n                        </button>\n                </div>\n            </div>\n        </div>`;\n  return markup;\n}\n\nexport { makingModalCardMarkup };\n"],"names":["parcelRequire","$1drNe","$krGWQ","refs","libraryCardsContainer","addEventListener","e","target","nodeName","document","body","classList","add","window","$ebdeb9d781fb2b98$var$modalCloseByEsc","currentId","dataset","id","unParsedCurrentArrayFilmsW","localStorage","getItem","unParsedCurrentArrayFilmsQ","parsedCurrentArrayFilmsW","JSON","parse","parsedCurrentArrayFilmsQ","libraryMovieWatched","find","obj","libraryMovieQueue","render","imagePath","poster_path","$1hBMB","BASE_POSTER_URL","title","name","$gXqAZ","setReleaseVote","vote_average","vote_count","popularity","original_title","original_name","gettingGenresListForModal","genre_ids","overview","$ebdeb9d781fb2b98$export$a43620b324f4ff37","$ZS19j","translateItems","$7x8k5","insertModalMarkupHome","watchedBtn","querySelector","arrayFilmsWatched","w","arr","$fnyLm","deleteWatched","addWatchedLocalStorage","$ebdeb9d781fb2b98$var$style","$kYzA7","textModalBtn","queueBtn","arrayFilmsQueue","q","deleteQueue","addQueueLocalStorage","closeModalBtn","$ebdeb9d781fb2b98$var$onCloseModalBtnClick","modalCardBackdrop","currentTarget","homeCardsContainer","removeEventListener","remove","modalCardContainer","innerHTML","code"],"version":3,"file":"library.4ba8f17e.js.map"}